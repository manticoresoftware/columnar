name: ðŸ“¦ Pack and publish
run-name: ðŸ“¦ Pack and publish ${{ github.sha }}

#on: workflow_call
on:
  workflow_run:
    workflows: [ ðŸ”¬ Test ]
    types: [ completed ]
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened, labeled, unlabeled]
  push:
    branches:
      - columnar-*

# cancels the previous workflow run when a new one appears in the same branch (e.g. master or a PR's branch)
concurrency:
  group: pack_${{ github.ref }}
  cancel-in-progress: true

jobs:

  pack:
    name: OK to pack?
    runs-on: ubuntu-22.04
    if: |
      (github.event_name == 'pull_request' && (contains(github.event.pull_request.labels.*.name, 'pack') || contains(github.event.pull_request.labels.*.name, 'publish')))
      || (github.event_name == 'push')
      || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && github.ref == 'refs/heads/master' && github.event.workflow_run.event != 'schedule')
    steps:
      - run: echo "All set to build packages"

  check_branch:
    name: Check branch existence
    runs-on: ubuntu-22.04
    outputs:
      manticore_locator: ${{ steps.set_locator.outputs.manticore_locator }}
    steps:
      - name: Check if branch exists in manticoresoftware/manticoresearch
        id: check_branch
        if: github.ref_name != 'master'
        run: |
          # Extract the actual branch name for pull requests
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          else
            BRANCH_NAME="${{ github.ref_name }}"
          fi
          
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://api.github.com/repos/manticoresoftware/manticoresearch/branches/$BRANCH_NAME)
          if [ "$HTTP_STATUS" -eq "200" ]; then
            echo "branch_exists=true" >> $GITHUB_OUTPUT
            echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          else
            echo "branch_exists=false" >> $GITHUB_OUTPUT
            echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          fi

      - name: Set Manticore Locator
        id: set_locator
        run: |
          if [[ "${{ github.event.schedule }}" == "00 20 * * *" ]]; then
            echo "manticore_locator=GIT_REPOSITORY https://github.com/manticoresoftware/manticoresearch.git GIT_TAG master" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" != "master" && "${{ steps.check_branch.outputs.branch_exists }}" == "true" ]]; then
            echo "manticore_locator=GIT_REPOSITORY https://github.com/manticoresoftware/manticoresearch.git GIT_TAG ${{ steps.check_branch.outputs.branch_name }}" >> $GITHUB_OUTPUT
          else
            echo "manticore_locator=" >> $GITHUB_OUTPUT
          fi

  embedding_osx_pack:
    needs: pack
    uses: ./.github/workflows/embedding_build_template.yml
    strategy:
      fail-fast: false
      matrix:
        distr: [macos]
        arch: [x86_64, aarch64]
    name: ${{ matrix.distr }} ${{ matrix.arch }} embedding packing
    with:
      runner: macos-14
      distr: ${{ matrix.distr }}
      arch: ${{ matrix.arch }}

  embedding_linux_pack:
    needs: pack
    uses: ./.github/workflows/embedding_build_template.yml
    strategy:
      fail-fast: false
      matrix:
        distr: [linux]
        arch: [x86_64, aarch64]
    name: ${{ matrix.distr }} ${{ matrix.arch }} embedding packing
    with:
      runner: ubuntu-22.04
      distr: ${{ matrix.distr }}
      arch: ${{ matrix.arch }}

  embedding_windows_pack:
    needs: pack
    uses: ./.github/workflows/embedding_build_template.yml
    strategy:
      fail-fast: false
      matrix:
        distr: [windows]
        arch: [x86_64, aarch64]
    name: ${{ matrix.distr }} ${{ matrix.arch }} embedding packing
    with:
      runner: windows-2022
      distr: ${{ matrix.distr }}
      arch: ${{ matrix.arch }}

  pack_debian_ubuntu:
    uses: ./.github/workflows/build_template.yml
    needs: [embedding_linux_pack, check_branch]
    strategy:
      fail-fast: false
      matrix:
        DISTR: [bionic, focal, jammy, buster, bullseye, bookworm]
        arch: [x86_64, aarch64]
    name: ${{ matrix.DISTR }} ${{ matrix.arch }} packing
    with:
      MANTICORE_LOCATOR: ${{ needs.check_branch.outputs.manticore_locator }}
      DISTR: ${{ matrix.DISTR }}
      arch: ${{ matrix.arch }}
      cmake_command: |
        mkdir build
        cd build
        cmake -DPACK=1 ..
        cmake --build . --target package
      cache_key: pack_${{ matrix.DISTR }}_${{ matrix.arch }}
      artifact_list: "build/manticore*deb"
      embeddings_artifact: embeddings_linux_${{ matrix.arch }}

  pack_rhel:
    uses: ./.github/workflows/build_template.yml
    needs: [embedding_linux_pack, check_branch]
    strategy:
      fail-fast: false
      matrix:
        DISTR: [rhel7, rhel8, rhel9]
        arch: [x86_64, aarch64]
    name: ${{ matrix.DISTR }} ${{ matrix.arch }} packing
    with:
      MANTICORE_LOCATOR: ${{ needs.check_branch.outputs.manticore_locator }}
      DISTR: ${{ matrix.DISTR }}
      arch: ${{ matrix.arch }}
      boost: boost_rhel_feb17
      cmake_command: |
        ln -s $(pwd) /builds_manticoresearch_dev_usr_src_debug_manticore_component_src_0
        cd /builds_manticoresearch_dev_usr_src_debug_manticore_component_src_0
        mkdir build
        cd build
        cmake -DPACK=1 ..
        cmake --build . --target package
      cache_key: pack_${{ matrix.DISTR }}_${{ matrix.arch }}
      artifact_list: "build/manticore*rpm"
      embeddings_artifact: embeddings_linux_${{ matrix.arch }}


  pack_macos:
    uses: ./.github/workflows/build_template.yml
    needs: [embedding_osx_pack, check_branch]
    strategy:
      fail-fast: false
      matrix:
        DISTR: [macos]
        arch: [x86_64, arm64]
    name: ${{ matrix.DISTR }} ${{ matrix.arch }} packing
    with:
      MANTICORE_LOCATOR: ${{ needs.check_branch.outputs.manticore_locator }}
      DISTR: ${{ matrix.DISTR }}
      arch: ${{ matrix.arch }}
      HOMEBREW_PREFIX: /opt/homebrew
      cmake_command: |
        mkdir build
        cd build
        cmake -DPACK=1 ..
        cmake --build . --target package
      cache_key: pack_${{ matrix.DISTR }}_${{ matrix.arch }}
      artifact_list: "build/manticore*tar.gz"
      embeddings_artifact: embeddings_macos_${{ matrix.arch == 'arm64' && 'aarch64' || matrix.arch }}

  pack_windows:
    name: Windows x64 package
    uses: ./.github/workflows/build_template.yml
    needs: [embedding_windows_pack, check_branch]
    with:
      MANTICORE_LOCATOR: ${{ needs.check_branch.outputs.manticore_locator }}
      DISTR: windows
      arch: x64
      cmake_command: |
        mkdir build
        cd build
        cmake -DPACK=1 ..
        cmake --build . --target package
      cache_key: pack_${{ matrix.DISTR }}_${{ matrix.arch }}
      artifact_list: "build/manticore*exe build/manticore*zip"
      embeddings_artifact: embeddings_windows_x86_64

  # virtual job to simplify the CI
  # This job depends on all the package preparation jobs that have to pass before we can start publishing packages
  publish:
    name: OK to publish?
    runs-on: ubuntu-22.04
    needs: [pack_debian_ubuntu, pack_rhel, pack_macos, pack_windows]
    if: |
      (github.repository == 'manticoresoftware/columnar')
      && (
        (github.event_name == 'pull_request' && (contains(github.event.pull_request.labels.*.name, 'publish')))
        || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
        || (github.event_name == 'push' && startsWith(github.ref, 'refs/heads/columnar-'))
      )
    outputs:
      target: ${{ steps.set-target.outputs.target }}
    steps:
      - run: echo "Ready to publish"
      - id: set-target
        run: |
          if [[ "${{ github.ref }}" == refs/heads/columnar-* ]]; then
            echo "target=release" >> $GITHUB_OUTPUT
          else
            echo "target=" >> $GITHUB_OUTPUT
          fi

  publish_debian_ubuntu:
    needs: publish
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: true
      matrix:
        DISTR: [bionic, focal, jammy, buster, bullseye, bookworm]
        arch: [x86_64, aarch64]
    name: ${{ matrix.DISTR }} ${{ matrix.arch }} publishing
    steps:
      - uses: manticoresoftware/publish_to_repo@main
        with:
          ssh_key: ${{ secrets.REPO_SSH_KEY }}
          distr: ${{ matrix.DISTR }}
          arch: ${{ matrix.arch }}
          artifact: build_${{ matrix.DISTR }}_RelWithDebInfo_${{ matrix.arch }}
          type: deb
          delimiter: "-"
          target: ${{ needs.publish.outputs.target }}

  publish_rhel:
    needs: publish
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: true
      matrix:
        DISTR: [7, 8, 9]
        arch: [x86_64, aarch64]
    name: RHEL ${{ matrix.DISTR }} ${{ matrix.arch }} publishing
    steps:
      - uses: manticoresoftware/publish_to_repo@main
        with:
          ssh_key: ${{ secrets.REPO_SSH_KEY }}
          distr: ${{ matrix.DISTR }}
          arch: ${{ matrix.arch }}
          artifact: build_rhel${{ matrix.DISTR }}_RelWithDebInfo_${{ matrix.arch }}
          type: rpm
          delimiter: "_"
          target: ${{ needs.publish.outputs.target }}

  publish_macos:
    needs: publish
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: true
      matrix:
        arch: [x86_64, arm64]
    name: macos ${{ matrix.arch }} publishing
    steps:
      - uses: manticoresoftware/publish_to_repo@main
        with:
          ssh_key: ${{ secrets.REPO_SSH_KEY }}
          distr: macos
          arch: ${{ matrix.arch }}
          artifact: build_macos_RelWithDebInfo_${{ matrix.arch }}
          type: arc
          delimiter: "-"
          target: ${{ needs.publish.outputs.target }}

  publish_windows:
    name: Publishing Windows packages to repo.manticoresearch.com
    needs: publish
    runs-on: ubuntu-22.04
    steps:
      - uses: manticoresoftware/publish_to_repo@main
        with:
          ssh_key: ${{ secrets.REPO_SSH_KEY }}
          distr: windows
          arch: x64
          artifact: build_windows_RelWithDebInfo_x64
          type: arc
          delimiter: "-"
          target: ${{ needs.publish.outputs.target }}
  vars:
    name: Detecting versions
    needs:
      - publish_debian_ubuntu
      - publish_rhel
      - publish_macos
      - publish_windows
    runs-on: ubuntu-22.04
    outputs:
      app_version: ${{ steps.vars.outputs.app_version }}
      app_date: ${{ steps.vars.outputs.app_date }}
      app_commit: ${{ steps.vars.outputs.app_commit }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - id: vars
        run: |
          version=$( cat CMakeLists.txt | grep 'columnar VERSION' | cut -d' ' -f5  )
          date=$( git log -1 --date=format-local:"%y%m%d%H" --format=%cd )
          commit=${GITHUB_SHA:0:7}

          echo "app_version=$version" >> $GITHUB_OUTPUT
          echo "app_date=$date" >> $GITHUB_OUTPUT
          echo "app_commit=$commit" >> $GITHUB_OUTPUT

  update-manticoresearch-deps:
    needs:
      - vars
      - publish
    runs-on: ubuntu-22.04
    if: needs.publish.outputs.target != 'release'
    steps:
      - name: Update deps
        uses: manticoresoftware/manticoresearch/actions/update-deps@master
        with:
          name: mcl
          version: "${{ needs.vars.outputs.app_version }} ${{ needs.vars.outputs.app_date }} ${{ needs.vars.outputs.app_commit }}"
          token: ${{ secrets.PR_TOKEN }}
