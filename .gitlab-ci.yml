workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == "master" && $CI_COMMIT_TITLE != $DOCS_AUTOCOMMIT_TITLE
    - if: $CI_COMMIT_BRANCH =~ /^columnar-.*$/ && $CI_COMMIT_TITLE != $DOCS_AUTOCOMMIT_TITLE
    - if: $CI_PIPELINE_SOURCE == "schedule"

# to skip ci: git push -o ci.skip ...

# global settings will be applied to all jobs
variables:
  VERBOSE: 1
  DIAGNOSTIC: 1

stages:
  - mirroring
  - routines
  - ubertests
  - publish
  - hooks

# ==================== Mirror repo to github (only 'master' branch) ======================

job_mirror:
  stage: mirroring
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
    - if: $CI_COMMIT_BRANCH =~ /^columnar-.*$/
  tags:
    - dev-host
  dependencies: []
  script:
    - ./gitsync_columnar.sh
  cache: {}

# ==================== .helper build ======================

.build:
  stage: routines
  interruptible: true
  needs: [ ]
  tags:
    - docker-free
  image: manticoresearch/external_toolchain:clang15_cmake3263
  variables:
    CACHEB: $CI_PROJECT_DIR/cache
    NO_TESTS: 1
    CTEST_CMAKE_GENERATOR: Ninja
    DISTR: bionic # our default build for tests
    arch: x86_64
    boost: boost_nov22
    sysroot: roots_nov22
  script:
    - ctest -VV -S cmake/citest.cmake --no-compress-output
  after_script:
    - cd build && mkdir xml
    - cp -r Testing/2*/*.xml xml
  cache:
    paths:
      - $CI_PROJECT_DIR/cache
    key: bionic_test
  artifacts:
    when: on_success
    expire_in: 12 hrs
    paths:
      - build/xml
      - build/columnar/lib_manticore_columnar.so
      - build/secondary/lib_manticore_secondary.so
      - build/knn/lib_manticore_knn.so
      - build/_deps/manticore-build/src/searchd
      - build/_deps/manticore-build/src/indexer
      - build/_deps/manticore-build/src/indextool
      - build/_deps/manticore-build/config/*.c
      - build/_deps/manticore-build/config/*.h

# ==================== .helper testing ======================

.tests:
  stage: ubertests
  needs: [ ]
  tags:
    - specdocker
  image: manticoresearch/ubertests_ctest:3263
  variables:
    CACHEB: $CI_PROJECT_DIR/cache
    NO_BUILD: 1
  script:
    - ctest -V -S cmake/citest.cmake --no-compress-output
  after_script:
    - cd build
    - cp -r Testing/2*/Test.xml .
    - xsltproc -o junit_tests.xml ../misc/junit/ctest2junit.xsl Test.xml
  cache:
    key: bionic_test
    paths:
      - $CI_PROJECT_DIR/cache
  artifacts:
    expire_in: 12 hrs
    when: always
    reports:
      junit: build/junit_tests.xml
    paths:
      - build/junit_tests.xml
      - build/_deps/manticore-build/test/test_*/report.txt
      - build/_deps/manticore-build/test/test_*/report.bin
      - build/_deps/manticore-build/test/error*.txt
      - build/_deps/manticore-build/test/searchd.log
  retry: 1

# ==================== Simple build, then test ======================

simple_build:
  extends: [ .build ]
  variables:
    CTEST_CONFIGURATION_TYPE: Debug

simple_tests:
  extends: [ .tests ]
  needs: [ simple_build ]
  variables:
    CTEST_CONFIGURATION_TYPE: Debug

# ==================== Release build, then test ======================

release_build:
  extends: [ .build ]
  variables:
    CMAKE_INTERPROCEDURAL_OPTIMIZATION: 1
    CTEST_CONFIGURATION_TYPE: RelWithDebInfo

release_tests:
  extends: [ .tests ]
  needs: [ release_build ]
  variables:
    CTEST_CONFIGURATION_TYPE: RelWithDebInfo

# ==================== Windows build, then test ======================

win_build:
  extends: [ .build ]
  variables:
    DISTR: windows
    arch: x64
    CTEST_CMAKE_GENERATOR: "Ninja Multi-Config"
    CTEST_CONFIGURATION_TYPE: Debug
  artifacts:
    paths:
      - build/xml
      - build/columnar/$CTEST_CONFIGURATION_TYPE/lib_manticore_columnar.dll
      - build/secondary/$CTEST_CONFIGURATION_TYPE/lib_manticore_secondary.dll
      - build/knn/$CTEST_CONFIGURATION_TYPE/lib_manticore_knn.dll
      - build/_deps/manticore-build/src/$CTEST_CONFIGURATION_TYPE/indexer.exe
      - build/_deps/manticore-build/src/$CTEST_CONFIGURATION_TYPE/searchd.exe
# Commented out usually need, but not on our dev where everything is installed into system
#      - build/_deps/manticore-build/src/$CTEST_CONFIGURATION_TYPE/*.dll
#      - build/_deps/manticore-build/src/gtests/$CTEST_CONFIGURATION_TYPE/*.dll
  cache:
    key: win_test

win_tests:
  stage: ubertests
  needs: [ win_build ]
  tags:
    - windev19
  variables:
    LIBS_BUNDLE: "x:/bundle"
    CACHEB: "x:/cache"
    BOOST_ROOT: "x:/boost_1_75_0"
    CTEST_CMAKE_GENERATOR: "Visual Studio 16 2019"
    CTEST_CONFIGURATION_TYPE: Debug
    CTEST_EXCLUDE_REGEX: "_466"
    NO_BUILD: 1
  script:
    - 'net use x: \\\\VBOXSRV\\shared'
    - ctest -VV -S cmake/citest.cmake -C $CTEST_CONFIGURATION_TYPE --no-compress-output
  after_script:
    - cd build
    - cp -r Testing/2*/*.xml xml
  artifacts:
    expire_in: 12 hrs
    when: always
    paths:
      - build/xml
      - build/_deps/manticore-build/test/test_*/report.txt
      - build/_deps/manticore-build/test/test_*/report.bin
      - build/_deps/manticore-build/test/error*.txt
      - build/_deps/manticore-build/test/searchd.log
  cache: { }


# ==================== Publish (push) pipeline results ======================

# build and upload on regular commits
convert_win_junit:
  stage: publish
  tags:
    - docker
  image: manticoresearch/ubertests_ctest:3263
  needs:
    - win_tests
  variables:
    GIT_STRATEGY: fetch
  script:
    - xsltproc -o build/junit_tests.xml misc/junit/ctest2junit.xsl build/xml/Test.xml
  artifacts:
    paths:
      - build/junit_tests.xml
    reports:
      junit: build/junit_tests.xml
  cache: { }

# ==================== Run secondary pipeline ======================

#deploy_hook:
#  stage: hooks
#  rules:
#    - if: $CI_PIPELINE_SOURCE != "schedule"
#  trigger:
#    include: packaging.yml
#  needs:
#    - job: simple_tests
#      artifacts: false
#    - job: release_tests
#      artifacts: false
#    - job: win_tests
#      artifacts: false
